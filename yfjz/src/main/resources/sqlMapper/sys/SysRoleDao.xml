<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.yfjz.dao.sys.SysRoleDao">

    <select id="queryObject" resultType="io.yfjz.entity.sys.SysRoleEntity">
		select * from sys_role where role_id = #{value}
	</select>

    <select id="queryList" resultType="io.yfjz.entity.sys.SysRoleEntity">
        select * from sys_role
        <where>
            <if test="roleName != null and roleName.trim() != ''">
                and role_name like concat('%',#{roleName},'%')
            </if>
        </where>
        order by role_id asc
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_role
        <where>
            <if test="roleName != null and roleName.trim() != ''">
                and role_name like concat('%',#{roleName},'%')
            </if>
        </where>
    </select>

    <insert id="save" parameterType="io.yfjz.entity.sys.SysRoleEntity" useGeneratedKeys="true" keyProperty="roleId">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            role_id,
            <if test="roleName != null">role_name, </if>
            <if test="remark != null">remark, </if>
            <if test="createTime != null">create_time, </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
           uuid(),
            <if test="roleName != null">#{roleName}, </if>
            <if test="remark != null">#{remark}, </if>
            <if test="createTime != null">#{createTime}, </if>
        </trim>
    </insert>

    <update id="update" parameterType="io.yfjz.entity.sys.SysRoleEntity">
        update sys_role
        <set>
            <if test="roleName != null">role_name = #{roleName}, </if>
            <if test="remark != null">remark = #{remark}</if>
        </set>
        where role_id = #{roleId}
    </update>

    <delete id="deleteBatch">
        delete from sys_role where role_id in
        <foreach item="roleId" collection="array" open="(" separator="," close=")">
            #{roleId}
        </foreach>
        ;
        delete from sys_role_menu where role_id in
        <foreach item="roleId" collection="array" open="(" separator="," close=")">
            #{roleId}
        </foreach>
        ;
        delete from sys_user_role where role_id in
        <foreach item="roleId" collection="array" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>


</mapper>