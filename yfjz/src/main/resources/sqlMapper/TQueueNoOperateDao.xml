<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.yfjz.dao.queue.TQueueNoOperateDao">

	<select id="queryObject" resultType="io.yfjz.entity.queue.TQueueNoOperateEntity">
		select * from t_queue_no_operate where id = #{value}
	</select>

	<select id="queryList" resultType="io.yfjz.entity.queue.TQueueNoOperateEntity">
		select * from t_queue_no_operate 
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_queue_no_operate 
	</select>

	<insert id="save" parameterType="io.yfjz.entity.queue.TQueueNoOperateEntity">
        <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
            select uuid()
        </selectKey>
        insert into t_queue_no_operate
        <trim prefix="(" suffix=")" suffixOverrides=",">
`id`,
<if test="fkQueueNoId != null and fkQueueNoId  != ''">`fk_queue_no_id` , </if>
<if test="tower != null and tower  != ''">`tower` , </if>
<if test="operator != null and operator  != ''">`operator` , </if>
<if test="operateType != null and operateType  != ''">`operate_type` , </if>
<if test="operateTime != null">`operate_time`  , </if>
<if test="remark != null and remark  != ''">`remark` , </if>
<if test="status != null">`status` </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#{id},
<if test="fkQueueNoId != null and fkQueueNoId  != ''">#{fkQueueNoId} , </if>
<if test="tower != null and tower  != ''">#{tower} , </if>
<if test="operator != null and operator  != ''">#{operator} , </if>
<if test="operateType != null and operateType  != ''">#{operateType} , </if>
<if test="operateTime != null">#{operateTime} , </if>
<if test="remark != null and remark  != ''">#{remark} , </if>
<if test="status != null">#{status} </if>
	</trim>
    </insert>
	 
	<update id="update" parameterType="io.yfjz.entity.queue.TQueueNoOperateEntity">
		update t_queue_no_operate 
		<set>
	<if test="fkQueueNoId != null and fkQueueNoId  != ''">`fk_queue_no_id` = #{fkQueueNoId}, </if>
	<if test="tower != null and tower  != ''">`tower` = #{tower}, </if>
	<if test="operator != null and operator  != ''">`operator` = #{operator}, </if>
	<if test="operateType != null and operateType  != ''">`operate_type` = #{operateType}, </if>
	<if test="operateTime != null">`operate_time` = #{operateTime} , </if>
	<if test="remark != null and remark  != ''">`remark` = #{remark}, </if>
	<if test="status != null">`status` = #{status} </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_queue_no_operate where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_queue_no_operate where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<select id="queryPreviousOperator" resultType="String">
		select tower from t_queue_no_operate
		where fk_queue_no_id = #{queue_no_id}
		and operate_type ='FINISH' order by operate_time asc
	</select>
    <select id="queryListByWork" resultType="map">
		SELECT
		COUNT( queue.tower ) as amount,
		queue.operate_type opeType,
		base.tower_name  towerName,
		sys.real_name realName
		FROM
		t_queue_no_operate queue
		JOIN t_base_tower base ON queue.tower = base.id
		left JOIN sys_user sys ON queue.operator=sys.user_id
		WHERE
		queue.operate_type IN ( 'FINISH', 'CANCEL' )
		<![CDATA[ AND (TO_DAYS(operate_time) >=  TO_DAYS(#{startDate})   AND   TO_DAYS(operate_time) <=  TO_DAYS(#{endDate}) )   ]]>

		GROUP BY
		queue.tower,
		queue.operator,
		queue.operate_type
		ORDER BY
		sys.real_name
	</select>
	<select id="queryService" resultType="map">
		SELECT
		COUNT( evaluate_type ) as amount ,
		evaluate_type evaType ,
		tower.tower_name  towerName,
		sys.username

		FROM
		t_bus_evaluate  eva
		join t_base_tower  tower on eva.tower_id=tower.id
		join sys_user sys on eva.fk_doctor_id=sys.user_id
		where
		 <![CDATA[  (TO_DAYS(eva.create_time) >=  TO_DAYS(#{startDate})
		  AND   TO_DAYS(eva.create_time) <=  TO_DAYS(#{endDate}) )   ]]>
		GROUP BY
		eva.evaluate_type,
		tower.tower_name,
		sys.username
	</select>
</mapper>