<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.yfjz.dao.webService.DataSynchronizationDao">
    <!--根据传入的表和表主键编号id查询是否有这条数据 返回一个Map数据-->
    <select id="queryTableId" resultType="Map" statementType="STATEMENT">
     select
        <choose>
            <when test="column.size() != 0">
                <foreach item="item" index="index" collection="column" open=" "
                         separator="," close=" ">
                    ${item}
                </foreach>
            </when>
            <otherwise>
               *
            </otherwise>
        </choose>

     from ${tableName} t where
        <foreach item="value" index="key" collection="condition" open=" "
                 separator="and" close=" ">
            <if test="value != null">
                ${key} = '${value}'
            </if>
        </foreach>
    </select>

    <!--根据传入的表和表主键编号id查询是否有这条数据 如果有返回数量-->
    <select id="queryTableIdCount" resultType="Integer" statementType="STATEMENT">
        select count(*) from ${tableName} where
        <foreach item="value" index="key" collection="condition" open=" "
                 separator="and" close=" ">
            <if test="value != null">
                ${key} = '${value}'
            </if>
        </foreach>
    </select>

    <!--根据传入的表添加数据-->
    <insert id="addTableData" statementType="STATEMENT">
      insert into ${tableName}
        <foreach item="value" index="key" collection="data" open="("
                 separator="," close=")">
            <choose>
                <when test="value != null">
                    ${key}
                </when>
                <otherwise>

                </otherwise>
            </choose>
        </foreach>
        values
        <foreach item="value" index="key" collection="data" open="("
                 separator="," close=")">
            <choose>
                <when test='value != null and (key.indexOf("_time") != -1 or key.indexOf("_date") != -1) and key.indexOf("_times")==-1 '>
                    from_unixtime(${value}/1000)
                </when>
                <when test="value != null">
                    '${value}'
                </when>
                <otherwise>

                </otherwise>
            </choose>
        </foreach>
    </insert>

    <!--根据传入的表和表的主键更新数据-->
    <update id="updateTableData" statementType="STATEMENT">
      update ${tableName}
          <set>
              <foreach item="value" index="key" collection="data" open=" "
                       separator="," close=" ">
                  <choose>
                      <when test='value != null and (key.indexOf("_time") != -1 or key.indexOf("_date") != -1) and key.indexOf("_times")==-1'>
                          ${key} = from_unixtime(${value}/1000)
                      </when>
                      <when test="value != null">
                         ${key} = '${value}'
                      </when>
                      <otherwise>
                          ${key} = null
                      </otherwise>
                  </choose>
              </foreach>
          </set>
          <where>
              <foreach item="value" index="key" collection="condition" open=" "
                     separator="and" close=" ">
                <choose>
                    <when test="value != null">
                        ${key} = '${value}'
                    </when>
                    <otherwise>

                    </otherwise>
                </choose>
              </foreach>
          </where>
    </update>
    <!-- 根据编号查询机构所有信息 -->
    <select id="queryDepartList" parameterType="String" resultType="io.yfjz.entity.sys.SysDepartEntity">
        select id,name,description,pid from sys_depart where id = #{orgId} and  status = '0' and delete_status = '0'
    </select>

    <!--根据数据库和表名查询表的主键-->
    <select id="queryTableKey" resultType="String">
        SELECT
        column_name
        FROM
            information_schema.`key_column_usage`
        WHERE
        table_name = #{table}
        and constraint_schema = #{database}
        and constraint_name = 'PRIMARY'
    </select>

    <!--根据条件删除给定表中的数据-->
    <delete id="deleteTableData" statementType="STATEMENT">
      delete from ${tableName}
        <where>
            <foreach item="value" index="key" collection="condition" open=" "
                     separator="and" close=" ">
                <if test="value != null">
                    ${key} = '${value}'
                </if>
            </foreach>
        </where>
    </delete>
</mapper>